// <auto-generated />
using System;
using LeadManager.Infrastructure.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeadManager.Infrastructure.Migrations
{
    [DbContext(typeof(LeadManagerDbContext))]
    partial class LeadManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeadManager.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("Contacts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3651),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3654),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Phone = "987-654-3210"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3655),
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Phone = "555-123-4567"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3656),
                            Email = "bob.brown@example.com",
                            FirstName = "Bob",
                            LastName = "Brown",
                            Phone = "444-987-6543"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3657),
                            Email = "charlie.davis@example.com",
                            FirstName = "Charlie",
                            LastName = "Davis",
                            Phone = "333-222-1111"
                        });
                });

            modelBuilder.Entity("LeadManager.Domain.Entities.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ContactId")
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Leads", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Real Estate",
                            ContactId = 1,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3802),
                            Description = "Spacious apartment with a great view",
                            Price = 300000.00m,
                            Suburb = "Downtown"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Automobile",
                            ContactId = 2,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3804),
                            Description = "Brand new car with excellent mileage",
                            Price = 20000.00m,
                            Suburb = "Suburbs"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Technology",
                            ContactId = 3,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3805),
                            Description = "Latest laptop with high-end specs",
                            Price = 1500.00m,
                            Suburb = "Uptown"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Real Estate",
                            ContactId = 4,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3806),
                            Description = "Beachfront house with a large yard",
                            Price = 500000.00m,
                            Suburb = "Beachfront"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Furniture",
                            ContactId = 5,
                            DateCreated = new DateTime(2025, 3, 25, 19, 17, 19, 587, DateTimeKind.Utc).AddTicks(3807),
                            Description = "Modern sofa set, brand new",
                            Price = 800.00m,
                            Suburb = "City Center"
                        });
                });

            modelBuilder.Entity("LeadManager.Domain.Entities.Lead", b =>
                {
                    b.HasOne("LeadManager.Domain.Entities.Contact", "Contact")
                        .WithMany("Leads")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("LeadManager.Domain.Entities.Contact", b =>
                {
                    b.Navigation("Leads");
                });
#pragma warning restore 612, 618
        }
    }
}
